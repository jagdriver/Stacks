version: '3.7'

#
# WaveSnake 2020-03-20 
# Docker Compose file for SnakeHistory.
# This solution are deployed from Portainer as a 
# Stack Service.
#
services:

  snakehistory: 
    image: jagdriver/wavesnake:snakehistory-v1.0.6

    networks:
      - traefik-public

    volumes:
      - "/var/log/snakelogs:/var/snakelogs"

    extra_hosts:
      - "redis.wavesnake.local:192.168.230.1"

    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      placement:
        constraints:
          - node.role == manager

#
# SnakeTimer background service
#
  snaketimer: 
    image: jagdriver/wavesnake:snaketimer-v1.0.0

    networks:
      - traefik-public

    volumes:
      - "/var/log/snakelogs:/var/log/snakelogs"

    extra_hosts:
      - "redis.wavesnake.local:192.168.230.1"

    environment:
      - LOG_PATH="/var/log/snakelogs/snaketimer.log"
      - REDIS_SERVER="redis.wavesnake.local"
      - REDIS_PORT="8214"
      - REDIS_INSTANCE="SnakeTimer"
      - REDIS_CONFIGURATION="production"

    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      placement:
        constraints:
          - node.role == manager

#
# SnakeUtil Background Service
#
  snakeutil: 
    image: jagdriver/wavesnake:snakeutil

    networks:
      - traefik-public

    volumes:
      - "/var/log/snakelogs:/var/log/snakelogs"

    extra_hosts:
      - "redis.wavesnake.local:192.168.230.1"

    environment:
      - LOG_PATH="/var/log/snakelogs/snakeutil.log"
      - REDIS_SERVER="redis.wavesnake.local"
      - REDIS_PORT="8214"
      - REDIS_INSTANCE="SnakeUtil"
      - REDIS_CONFIGURATION="production"

    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      placement:
        constraints:
          - node.role == manager
#
# SnakeViz
#
  snakeviz:
    image: jagdriver/wavesnake:visualizer-v1.0.3

    networks:
      - traefik-public

    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

    labels:
      # This section is for external http access
      - "traefik.http.routers.viz-external.entrypoints=web"
      - "traefik.http.routers.viz-external.rule=Host(`viz.wavesnake.dk`)"
      - "traefik.http.routers.viz-external.service=viz-external"
      - "traefik.http.services.viz-external.loadbalancer.server.port=80"
      - "traefik.http.middlewares.viz-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.viz-external.middlewares=viz-https-redirect"

      # This section is for external https access
      - "traefik.http.routers.viz-secure.entrypoints=secure"
      - "traefik.http.routers.viz-secure.rule=Host(`viz.wavesnake.dk`)"
      - "traefik.http.routers.viz-secure.tls=true"
      - "traefik.http.routers.viz-secure.tls.certresolver=http"
      - "traefik.http.routers.viz-secure.service=viz-secure"
      - "traefik.http.services.viz-secure.loadbalancer.server.port=80"

    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      placement:
        constraints:
          - node.role == manager

networks:
  traefik-public:
    external: true
